{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","App","state","NONE","sortByAlphabet","setState","sortByLength","getReverse","getReset","this","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMe,EAAb,4MACEC,MAAQ,CACNZ,SAAUJ,EAASiB,KACnBZ,YAAY,GAHhB,EAMEa,eAAiB,kBAAM,EAAKC,UAAS,iBAAO,CAC1Cf,SAAUJ,EAASU,cAPvB,EAUEU,aAAe,kBAAM,EAAKD,UAAS,iBAAO,CACxCf,SAAUJ,EAASY,YAXvB,EAcES,WAAa,kBAAM,EAAKF,UAAS,SAACH,GAAD,MAAmB,CAClDX,YAAaW,EAAMX,gBAfvB,EAkBEiB,SAAW,kBAAM,EAAKH,UAAS,iBAAO,CACpCf,SAAUJ,EAASiB,KACnBZ,YAAY,OApBhB,4CAuBE,WACE,MAAiCkB,KAAKP,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAElBc,EAIEK,KAJFL,eACAE,EAGEG,KAHFH,aACAC,EAEEE,KAFFF,WACAC,EACEC,KADFD,SAGF,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYtB,IAAaJ,EAASU,WAGtCiB,QAAST,EATX,iCAcA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WACEtB,IAAaJ,EAASY,SAG5Be,QAASP,EAVX,4BAeA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAarB,IAGjBsB,QAASN,EATX,sBAcEjB,IAAaJ,EAASiB,MAAQZ,IAC9B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASL,EAHX,sBASJ,6BACE,6BACGpB,EAAkBD,EAAiBsB,KAAKP,OAAOY,KAAI,SAAAC,GAAI,OACtD,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBA5FrB,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b5098d47.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortByAlphabet = () => this.setState(() => ({\n    sortType: SortType.ALPHABET,\n  }));\n\n  sortByLength = () => this.setState(() => ({\n    sortType: SortType.LENGTH,\n  }));\n\n  getReverse = () => this.setState((state: State) => ({\n    isReversed: !state.isReversed,\n  }));\n\n  getReset = () => this.setState(() => ({\n    sortType: SortType.NONE,\n    isReversed: false,\n  }));\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const {\n      sortByAlphabet,\n      sortByLength,\n      getReverse,\n      getReset,\n    } = this;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light':\n                  sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={getReverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={getReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li\n                key={good}\n                data-cy=\"Good\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}